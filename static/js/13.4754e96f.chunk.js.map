{"version":3,"sources":["Pages/Product.js"],"names":["Items","React","lazy","Product","pageCategory","useParams","useState","items","setItems","categories","setCategories","isLoading","setIsLoading","isLoadingCategory","setIsLoadingCategory","rangeValue","setRangeValue","storeId","useSelector","state","id","useEffect","category","fetch","process","then","res","ok","Error","json","data","catch","err","message","count","a","getCategories","value","getCategoriesData","selectedItems","filter","item","price","className","map","to","onChange","e","target","type","min","max","step","image","title"],"mappings":"sNAOMA,EAAQC,IAAMC,MAAK,kBAAM,gCAuHhBC,UArHC,WACZ,IAAMC,EAAeC,cACrB,EAA0BC,qBAA1B,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,qBAApC,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,QAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAAkDN,mBAAS,QAA3D,mBAAOO,EAAP,KAA0BC,EAA1B,KACA,EAAoCR,mBAAS,KAA7C,mBAAOS,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,QAAQG,MACnDC,qBAAU,WACNT,EAAa,WACb,IAEMU,EAAWlB,EAAakB,SAC9BC,MAAM,GAAD,OAFOC,8CAEP,YAAYF,EAA2B,wBAAhB,cAAvB,YAAkEL,EAAlE,YAA8EK,GAHrE,KAITG,MAAK,SAAAC,GACF,IAAKA,EAAIC,GACL,MAAMC,MAAM,sBAEhB,OAAOF,EAAIG,UAEdJ,MAAK,SAAAK,GACFtB,EAASsB,GACTlB,EAAa,cAEhBmB,OAAM,SAAAC,GACHpB,EAAaoB,EAAIC,cAE1B,CAAC7B,IAEJiB,qBAAU,YACiB,uCAAG,WAAOa,GAAP,iBAAAC,EAAA,6DACtBrB,EAAqB,WADC,SAEFsB,YAAcF,GAFZ,cAEhBG,EAFgB,gBAGHA,EAAMR,OAHH,OAGhBC,EAHgB,OAItBhB,EAAqB,WACrBJ,EAAcoB,GALQ,2CAAH,sDAOvBQ,CAAkB,KACnB,IACH,IAGMC,EAAiBhC,EAAQA,EAAMiC,QAAO,SAACC,GAAD,OAAUA,EAAKC,OAAS3B,KAAc,KAElF,MAAiB,YAAdJ,GAAiD,YAAtBE,EACnB,cAAC,IAAD,IAGO,YAAdF,GAAyC,YAAdA,GAAyC,SAAdA,EAC/C,8BAAMA,IAIb,yBAASgC,UAAU,qBAAqBvB,GAAG,WAA3C,SACI,sBAAKuB,UAAU,YAAf,UACI,qBAAKA,UAAU,iCAAf,SACI,oBAAIA,UAAU,kBAAd,SAAiCvC,EAAakB,SAAWlB,EAAakB,SAAW,mBAErF,sBAAKqB,UAAU,MAAf,UACI,sBAAKA,UAAU,mCAAf,UACI,oBAAIA,UAAU,qBAAd,qBACA,sBAAKA,UAAU,OAAf,UACI,gCACI,2CAEJ,oBAAIA,UAAU,aAAd,SACKlC,EAAaA,EAAWmC,KAAI,SAAAtB,GAAQ,OACjC,oBAAIqB,UAAU,kBAAd,SACI,cAAC,IAAD,CACIE,GAAE,WAAM5B,EAAN,6BAAkCK,EAASA,UADjD,SAC8DA,EAASA,YAFtCA,EAASF,OAI7C,cAAC,IAAD,SAGb,gCACI,+BACI,sBAAKuB,UAAU,aAAf,UACI,gCACI,wCAEJ,uBACIG,SA1Cd,SAACC,GACnB/B,EAAc+B,EAAEC,OAAOX,QA0CSY,KAAK,QACLC,IAAI,KACJC,IAAI,OACJC,KAAK,KACLT,UAAU,qBACVN,MAAOtB,SAInB,sBAAK4B,UAAU,iCAAf,UACI,sCAAS5B,KACT,mDAIZ,qBAAK4B,UAAU,WAAf,SACI,qBAAKA,UAAU,WAAf,SACmB,YAAdhC,EAA0B4B,EAAcK,KAAI,SAACH,GAAD,OACzC,cAACzC,EAAD,CACIqD,MAAOZ,EAAKY,MACZC,MAAOb,EAAKa,MACZZ,MAAOD,EAAKC,MAEZtB,GAAIqB,EAAKrB,IACJqB,EAAKrB,OAEb,cAAC,IAAD","file":"static/js/13.4754e96f.chunk.js","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport {getCategories} from \"../API/api\";\r\nimport {Link} from \"react-router-dom\";\r\nimport Loader from \"../Components/Loader\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst Items = React.lazy(() => import(\"./Items\"));\r\n\r\nconst Product = () => {\r\n    const pageCategory = useParams();\r\n    const [items, setItems] = useState();\r\n    const [categories, setCategories] = useState();\r\n    const [isLoading, setIsLoading] = useState('idle');\r\n    const [isLoadingCategory, setIsLoadingCategory] = useState('idle');\r\n    const [rangeValue, setRangeValue] = useState(500);\r\n    const storeId = useSelector(state => state.storeId.id);\r\n    useEffect(() => {\r\n        setIsLoading('loading');\r\n        const count = 50;\r\n        const url = process.env.REACT_APP_BACKEND_URL;\r\n        const category = pageCategory.category;\r\n        fetch(`${url}/${!category ? 'getProducts' : 'getProductsByCategory'}/${storeId}/${!category ? count : category}`)\r\n            .then(res => {\r\n                if (!res.ok) {\r\n                    throw Error(\"Products not Found\");\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setItems(data);\r\n                setIsLoading('success');\r\n            })\r\n            .catch(err => {\r\n                setIsLoading(err.message)\r\n            })\r\n    }, [pageCategory])\r\n\r\n    useEffect(() => {\r\n        const getCategoriesData = async (count) => {\r\n            setIsLoadingCategory('loading');\r\n            const value = await getCategories(count);\r\n            const data = await value.json();\r\n            setIsLoadingCategory('success')\r\n            setCategories(data);\r\n        }\r\n        getCategoriesData(4);\r\n    }, [])\r\n    const changeHandler = (e) => {\r\n        setRangeValue(e.target.value);\r\n    };\r\n    const selectedItems = (items ? items.filter((item) => item.price <= rangeValue) : null);\r\n    \r\n    if(isLoading === \"loading\" && isLoadingCategory === \"loading\") {\r\n        return <Loader />\r\n    }\r\n\r\n    if (isLoading !== 'success' && isLoading !== 'loading' && isLoading !== 'idle') {\r\n        return <div>{isLoading}</div>\r\n    }\r\n\r\n    return (\r\n        <section className=\"products py-5 my 5\" id=\"products\">\r\n            <div className=\"container\">\r\n                <div className=\"section_title text-center mb-5\">\r\n                    <h1 className=\"text-capitalize\">{pageCategory.category ? pageCategory.category : \"All Products\"}</h1>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-3 border-right mb-small-5\">\r\n                        <h4 className=\"mb-5 border-bottom\">Filters</h4>\r\n                        <div className=\"mb-5\">\r\n                            <label>\r\n                                <b>Category</b>\r\n                            </label>\r\n                            <ul className=\"list-group\">\r\n                                {categories ? categories.map(category => (\r\n                                    <li className=\"list-group-item\" key={category.id}>\r\n                                        <Link\r\n                                            to={`/${storeId}/product/category/${category.category}`}>{category.category}</Link>\r\n                                    </li>\r\n                                )) : <Loader/>}\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <form>\r\n                                <div className=\"form-group\">\r\n                                    <label>\r\n                                        <b>Price</b>\r\n                                    </label>\r\n                                    <input\r\n                                        onChange={changeHandler}\r\n                                        type=\"range\"\r\n                                        min=\"50\"\r\n                                        max=\"1000\"\r\n                                        step=\"50\"\r\n                                        className=\"form-control-range\"\r\n                                        value={rangeValue}\r\n                                    />\r\n                                </div>\r\n                            </form>\r\n                            <div className=\"d-flex justify-content-between\">\r\n                                <label>${rangeValue}</label>\r\n                                <label>$1000</label>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-9\">\r\n                        <div className=\"row mb-5\">\r\n                            {isLoading === 'success' ? selectedItems.map((item) => (\r\n                                <Items\r\n                                    image={item.image}\r\n                                    title={item.title}\r\n                                    price={item.price}\r\n                                    // stars={item.stars}\r\n                                    id={item.id}\r\n                                    key={item.id}\r\n                                />\r\n                            )) : <Loader />}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default Product;\r\n"],"sourceRoot":""}